Angular
-------
installation command - npm install -g @angular/cli@latest (i - install) , (npm - node package manager/module)

--> version checking command - ng v
--> project creation command - ng new project name
--> running command - ng serve --open (ng s -o)

Technologies used in Angular
----------------------------
--> to load contents - html
--> for styling - css
--> for dynamic - typescript

Typescript
----------
- strictly typed language
- superset of javascript
- we have to define type of a variable

:: browser does not have any engine to run typescript. So browser converts typescript to javascript while ruuning time.
This process is known as 'Transpiling'

browser list - browser configurations
editor config - editors configurations
gitignore - to avoid unwanted files while uploading to git
angular.json - configurations between angular project and angular CLI
karma.conf - angular testing Tool
package-lock.json-lock file of package.json
package.json - used to manage 3rd party libraries
readme.md - text file
ts files - typescript configuration files

asset - to store media files

while creating a project angular provides :
    - a root module and a root component inside the root module
    - we can create extra components inside the root module
        and it will be the sub component of the root module
        - we can create sub modules also....

- module -
    - it is a ts file
    - it manage components inside that module
- component -
    - ts html css
    - every component has a selector which is used to display the component

Stars with @ --- decorators --> used to store Meta data which is changeable

Create new component
    - ng generate component component_name ---> ng g c component_name

- only root component work in index.json
- we can call other sub components inside root component

working cycle of angular component 
----------------------------------
constructor ---> ngOnInit ---> other methods

Data Binding In Angular
-----------------------
ts file - component
html file - view file

1. One Way Binding ---> Data Binding in one direction
    1.1. ts -> html (component to view sharing)
        1.1.1. string interpollation : {{}} - to share string from js to html
        1.1.2. property binding : [property_name]="data" - to share as a value of a property
    1.2 html -> ts (view to component sharing)
        1.2.1. event Binding : (eventname)="method()" - to bind event
        1.2.2. $event binding : (eventname)="method($event)" - to bind data and access data
        1.2.3. event binding with template rendering variable - #VariableName
    
2. Two Way Binding
    2.1. ngModel -> [(ngModel)]="variable"
        - FormsModule -Module used to apply ngModel

Path Setting in Angular
-----------------------
set path in root module routing file
each page need different path
landing page path is " "
{path:"",component:PageClassName}

Redirection in Angular:
-----------------------

method - navigateByUrl(path)
class - Router

folder --> file --> class --> methods
(package)  (module)   

Dependency Injection
--------------------
to use a method in a class in another class
we do Dependency Injection inside constructor
    accessSpecifier reference:className 
    we use access specifiers , private or public
        - private : use in that specified class
        - public : use in classes inside specified file

Angular Services
----------------
It is a file in Angular
All components Can Access the content of service files

file creation command - ng generate service file_name( ng g s file_name )











































